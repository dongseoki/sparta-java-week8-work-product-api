spring:
  application:
    name: paymentapi
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3310/paymentdb?serverTimezone=UTC&characterEncoding=UTF-8&allowMultiQueries=true
    username: root
    password: rootpassword
    minimum-idle: 10
    maximum-pool-size: 10
    idle-timeout: 30000
    connection-timeout: 10000
    validation-timeout: 10000
    max-lifetime: 30000
    connection-test-query: SELECT 1

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  kafka:
    bootstrap-servers: host.docker.internal:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      properties:
        enable:
          idempotence: true
        max:
          in:
            flight:
              requests:
                per:
                  connection: 5
          block:
            ms: 90000
        retry:
          backoff:
            ms: 1000

    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

management:
  endpoints:
    web:
      exposure:
        include: prometheus,health,info,metric
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name:payment-api}

logging:
  level:
    root: INFO
    com:
      example: DEBUG
    org:
      apache:
        kafka: DEBUG
      springframework:
        kafka: DEBUG
        transaction: DEBUG


springdoc:
  swagger-ui:
    enabled: true